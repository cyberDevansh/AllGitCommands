ðŸš€ Ultimate Git Command Guide
ðŸ“Œ 1. Basic Git Commands
Command	Description
git --version	Check installed Git version
git help <command>	Get help for a specific Git command
git config --global user.name "Your Name"	Set global username
git config --global user.email "your@email.com"	Set global email
git config --list	View current Git configurations
git init	Initialize a new Git repository
git clone <repo_url>	Clone a remote repository
ðŸ“Œ 2. Staging & Committing Changes
Command	Description
git status	Show modified files in the working directory
git add <file>	Stage a specific file
git add .	Stage all changes in the directory
git restore --staged <file>	Unstage a file
git commit -m "Your message"	Commit staged changes with a message
git commit --amend -m "New message"	Edit the last commit message
ðŸ“Œ 3. Branching & Merging
Command	Description
git branch	List all local branches
git branch <branch_name>	Create a new branch
git checkout <branch_name>	Switch to another branch
git checkout -b <branch_name>	Create and switch to a new branch
git switch <branch_name>	Switch branches (newer alternative to checkout)
git switch -c <branch_name>	Create and switch branches (new alternative)
git merge <branch_name>	Merge a branch into the current branch
git branch -d <branch_name>	Delete a branch
git branch -D <branch_name>	Force delete a branch
git branch -r	Show remote branches
git branch -a	Show all local and remote branches
ðŸ“Œ 4. Remote Repository Management
Command	Description
git remote -v	List remote repositories
git remote add origin <repo_url>	Connect local repo to remote repo
git push origin <branch_name>	Push local branch to remote repo
git push -u origin <branch_name>	Push and set upstream tracking branch
git pull origin <branch_name>	Fetch and merge changes from remote
git fetch origin	Fetch changes without merging
git fetch --all	Fetch all remote branches
git remote remove <remote_name>	Remove a remote repo link
ðŸ“Œ 5. Undoing Changes & Resetting
Command	Description
git restore <file>	Discard changes in a file
git reset <file>	Unstage a file without discarding changes
git reset --soft HEAD~1	Undo the last commit (keep changes)
git reset --hard HEAD~1	Undo the last commit (discard changes)
git reset --hard origin/main	Reset local branch to match remote branch
ðŸ“Œ 6. Viewing History & Differences
Command	Description
git log	Show commit history
git log --oneline	Show commit history (compact view)
git log --graph --all	Show commit history with a graph
git diff	Show changes between commits and working directory
git diff <branch1> <branch2>	Compare two branches
ðŸ“Œ 7. Stashing Changes
Command	Description
git stash	Save changes temporarily
git stash list	Show list of stashes
git stash apply	Reapply the last stash
git stash drop	Delete the last stash
git stash clear	Remove all stashes
ðŸ“Œ 8. Tagging Commits
Command	Description
git tag <tag_name>	Create a new tag
git tag -a <tag_name> -m "message"	Create an annotated tag
git show <tag_name>	Show tag details
git push origin <tag_name>	Push a tag to remote
git push --tags	Push all tags to remote
ðŸ“Œ 9. Handling Merge Conflicts
Command	Description
git merge <branch_name>	Merge a branch
(If conflict occurs, manually edit and save the files)	
git add <file>	Mark conflict as resolved
git commit -m "Resolved merge conflict"	Commit the resolved merge
ðŸ“Œ 10. Deleting & Cleaning
Command	Description
git rm <file>	Remove a file and stage the deletion
git rm --cached <file>	Remove from staging area but keep locally
git clean -n	See which untracked files will be deleted
git clean -f	Delete untracked files
ðŸ“Œ 11. Advanced Git Commands
Command	Description
git cherry-pick <commit_hash>	Apply a specific commit to another branch
git rebase <branch_name>	Reapply commits on top of another branch
git reflog	Show history of HEAD movements
git bisect start	Start a binary search for a bug
git submodule add <repo_url>	Add a submodule
git submodule update --init --recursive	Initialize and update all submodules
ðŸŽ¯ Bonus: Git Aliases (Custom Shortcuts)
Command	Description
git config --global alias.co checkout	Set git co as shortcut for git checkout
git config --global alias.br branch	Set git br as shortcut for git branch
git config --global alias.cm "commit -m"	Set git cm as shortcut for git commit -m
git config --global alias.st status	Set git st as shortcut for git status
ðŸ”¥ Extra: GitHub UI vs Git Bash
ðŸ”¹ How to See Git History in GitHub UI
Open the GitHub repo.
Click on the "Commits" tab.
Click any commit to see file changes.
ðŸ”¹ How to See Branches in GitHub UI
Open the GitHub repo.
Click the "Branches" dropdown to view all branches.
ðŸ”¹ How to See Pull Requests (PRs)
Go to the repo on GitHub.
Click on "Pull Requests".
See open, merged, or closed PRs.
ðŸš€ Summary
Git helps track changes and collaborate.
Basic commands: init, clone, add, commit, push, pull.
Branching commands: branch, checkout, merge, switch.
Reset & restore: reset, restore, revert, stash.
Advanced features: cherry-pick, rebase, submodules.
ðŸ’¡ This covers EVERYTHING you need to become a Git expert! ðŸŽ¯
Let me know if you need examples or more explanations! ðŸš€







